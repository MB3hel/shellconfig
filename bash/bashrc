# Directory of this script
DIR=$(dirname "$BASH_SOURCE")

################################################################################
# Tab completion
################################################################################
# From git source tree contrib/completion directory
. "$DIR/git-completion.bash"
################################################################################

################################################################################
# Determine if to use colors
################################################################################
function __color_prompt {
    case "$TERM" in
        xterm-color) printf "yes";;
        xterm-256color) printf "yes";;
        *) printf "no";;
    esac
}

if [ "$(__color_prompt)" = yes ]; then
    export CLICOLOR=1
else
    export CLICOLOR=0
fi
color_prompt=no
################################################################################

################################################################################
# Prompt
################################################################################
# Based on https://gist.github.com/henrik/31631
# Using instead of git-prompt.sh from git itself because this is "faster"
# meaning requires fewer git commands. This is important on windows w/ MSYS2.
function __git_is_dirty {
    if [ "$(__color_prompt)" = yes ]; then
        [[ -z $(git status --porcelain 2> /dev/null) ]] || echo " \033[01;31m\]✗\[\033[00m\]"
    else
        [[ -z $(git status --porcelain 2> /dev/null) ]] || echo " ✗"
    fi
}
function __git_branch_name {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/"
}

function prompt_cmd() {
    lasterr=$?
    if [ "$(__color_prompt)" != yes ]; then
        arrow="→"
    elif [ $lasterr -ne 0 ]; then
        arrow="\[\033[01;91m\]→\[\033[00m\]"
    else
        arrow="\[\033[01;92m\]→\[\033[00m\]"
    fi
    git_branch="$(__git_branch_name)"
    git_addon=""
    if [ ! -z "$git_branch" ]; then
        git_dirty="$(__git_is_dirty)"
        if [ "$(__color_prompt)" = yes ]; then
            git_addon=" \[\033[01;36m\]git:(${git_branch}\[\033[00m\]${git_dirty}\[\033[01;36m\])\[\033[00m\]"
        else
            git_addon=" git:(${git_branch}${git_dirty})"
        fi
        unset git_dirty
    fi
    if [ "$(__color_prompt)" = yes ]; then
        # Different color for windows system (makes it easier to distinguish from WSL)
        if [ "$MSYSTEM" = "MSYS2" ]; then
            export PS1="\n${debian_chroot:+($debian_chroot)}${arrow} \[\033[00;33m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]${git_addon}\n\$ "
        else
            export PS1="\n${debian_chroot:+($debian_chroot)}${arrow} \[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]${git_addon}\n\$ "
        fi
    else
        export PS1="\n${debian_chroot:+($debian_chroot)}${arrow} \u@\h:\w${git_addon}\n\$ "
    fi
    unset arrow
    unset git_branch
    unset git_addon
    unset lasterr
}
export PROMPT_COMMAND=prompt_cmd

# Makes duplicate tab work in windows terminal
if [ "$(uname -o)" = "Msys"  ]; then
    PROMPT_COMMAND=${PROMPT_COMMAND:+"$PROMPT_COMMAND; "}'printf "\e]9;9;%s\e\\" "$(cygpath -w "$PWD")"'
fi
################################################################################


################################################################################
# Default Aliases / Functions
################################################################################
if [ "$(__color_prompt)" = yes ]; then
    alias ls='ls --color=auto'
    alias la='ls -A --color=auto'
    alias ll='ls -alF --color=auto'
else
    alias la='ls -A'
    alias ll='ls -alF'
fi
if [ "$(uname -o)" = "Msys" ]; then
    open() {
        target=$(echo -n "$1" | sed 's#/#\\#g')
        start "" "$target"
    }
elif [ "$(uname -o)" != "Darwin" ]; then
    open(){
        nohup xdg-open "$*" > /dev/null 2>&1
    }
fi
################################################################################
