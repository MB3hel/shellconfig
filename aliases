# This script is sourced AFTER shell RC scripts (bashrc / zshrc)
# Unlike profile, which is sourced before.
# This means that these aliases will overwrite any defined 
# by oh-my-zsh, oh-my-bash, AND any defined in bashrc / zshrc.

# Note: this file may also be loaded by the profile script
# If the shell is not bash or zsh. This is likely sh in such as case.
# Thus, MAINTAIN POSIX SHELL COMPATABILITY in this file!

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
if [ "$(uname -o)" != "Darwin" ]; then
    alias open='xdg-open'
    alias trash='gio trash'
fi
if type "wslpath" > /dev/null 2>&1; then
    # Use inside WSL to open a file in the WINDOWS program not the LINUX program for that file type
    openwin(){
        target=$(wslpath -w "$1")
        cmd.exe /c start "" "$target" > /dev/null 2>&1
    }
fi
if [ "$(uname -o)" = "Msys" ]; then
    # In MSYS2 sometimes we need to launch without the environment changes made by MSYS2
    # Note that the ORIGINAL_ variables are set by MSYS2 not by this profile script
    winlaunch(){
        HOME= PROMPT= PS1= PATH="$ORIGINAL_PATH" TMP="$ORIGINAL_TMP" TEMP="$ORIGINAL_TEMP" "$@"
    }

    # Workaround for tmux bug:
    #     https://github.com/microsoft/terminal/issues/5132#issuecomment-1009022843
    #     https://github.com/alacritty/alacritty/issues/1687#issuecomment-1282482768
    # This seems to not always be needed. Mostly an issue when attaching to existing tmux
    # that was started either from mintty or remote SSH session
    # Later trying to attach from windows terminal will break things
    tmux(){
        # ORIG_TERM="$TERM"
        # ORIG_TERM="$ORIG_TERM" script -q -O /dev/null -c "tmux ${@}"
        script -q -O /dev/null -c "tmux ${@}"
    }
fi

# Pickup changes to SSH agent when attaching to tmux from new login
# This does nothing on windows. SSH_AUTH_SOCK not used on windows
fixssh(){
    if [ "$(uname -o)" != "Msys" ]; then
        eval `tmux showenv -s SSH_AUTH_SOCK`
        eval `tmux showenv -s SSH_AGENT_PID`
    fi
}
