# Directory of this script
DIR=$(dirname "${(%):-%N}")

################################################################################
# History settings
################################################################################
# Preserve history
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory

# Search history with up/down keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
if [ "$terminfo[kcud1]" != "" ]; then
    bindkey "$terminfo[kcud1]" down-line-or-beginning-search
else
    bindkey "^[[B" down-line-or-beginning-search
fi
if [ "$terminfo[kcuu1]" != "" ]; then
    bindkey "$terminfo[kcuu1]" up-line-or-beginning-search
else
    bindkey "^[[A" up-line-or-beginning-search
fi

################################################################################

################################################################################
# Tab completion
################################################################################
# Load compinit module
autoload -Uz compinit && compinit

# Apply Oh-My-Zsh completion
source "$DIR"/completion.zsh
################################################################################

################################################################################
# Determine if to use colors
################################################################################
case "$TERM" in
    xterm-color) ;;
    xterm-256color) ;;
    *) export NO_COLOR=1 ;;
esac

if [ -z "$NO_COLOR" ]; then
    autoload -U colors && colors

    # Support .dircolors file in home
    if command -v dircolors &> /dev/null; then
        test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    fi
fi
################################################################################

################################################################################
# Prompt
################################################################################

# Enables paremeter expansion / substitution in prompt
setopt PROMPT_SUBST

__prompt_vcs_label () {
    if [ -d .git ]; then
        local git_branch="$(git symbolic-ref --short HEAD)"
        local git_dirty=""
        if [ ! -z "$git_branch" ]; then
            git_dirty="$([[ -z $(git status --porcelain 2> /dev/null) ]] || echo -ne " ✗")"
            if [ -z "$NO_COLOR" ]; then
                echo -n "(%{$fg_bold[cyan]%}${git_branch}%{$reset_color%}%{$fg_bold[red]%}${git_dirty}%{$reset_color%})"
            else
                echo -n "(${git_branch}${git_dirty})"
            fi
        fi
    fi
}

__prompt_arrow () {
    local lasterr=$?
    local arrow="→"
    if [ -z "$NO_COLOR" ] && [ $lasterr -ne 0 ]; then
        arrow="%{$fg_bold[red]%}${arrow}%{$reset_color%}"
    elif [ -z "$NO_COLOR" ]; then
        arrow="%{$fg_bold[green]%}${arrow}%{$reset_color%}"
    fi
    echo -n "$arrow"
}

if [ -z "$NO_COLOR" ]; then
    PS1="\$(__prompt_arrow)[%{$fg_bold[green]%}%n@%m%{$reset_color%}:%{$fg_bold[blue]%}%1~%{$reset_color%}]\$(__prompt_vcs_label)%% "
else
    PS1="\$(__prompt_arrow)[%n@%m:%1~]\$(__prompt_vcs_label)%% "
fi

if type "wslpath" > /dev/null 2>&1; then
    # Required for duplicate tab in windows terminal
    keep_current_path() {
        echo -ne "\e]9;9;%s\e\\" "$(wslpath -w "$PWD")"
    }
    precmd_functions+=(keep_current_path)
fi
################################################################################


################################################################################
# Default Aliases / Functions
################################################################################
source ~/.shellconfig/aliases
################################################################################
