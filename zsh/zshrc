# Directory of this script
DIR=$(dirname "${(%):-%N}")

################################################################################
# Tab completion
################################################################################
# From git source tree contrib/completion directory
zstyle ':completion:*:*:git:*' script "$DIR/../bash/git-completion.bash"
autoload -Uz compinit && compinit
autoload -U colors && colors
################################################################################

################################################################################
# Determine if to use colors
################################################################################
__use_colors () {
    case "$TERM" in
        xterm-color) printf "yes";;
        xterm-256color) printf "yes";;
        *) printf "no";;
    esac
}
__os_name () {
    uname -o 2> /dev/null || printf "Unknown"
}
################################################################################

################################################################################
# Prompt
################################################################################
__prompt_cmd () {
    local lasterr=$?
    local colors=$(__use_colors)

    # Arrow at start of prompt
    local arrow="→"
    if [ $colors = yes ] && [ $lasterr -ne 0 ]; then
        arrow="%F{red}→%f"
    elif [ $colors = yes ]; then
        arrow="%F{green}→%f"
    fi

    # Git branch and status
    local git_branch="$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/")"
    local git_str=""
    local git_addon=""
    if [ ! -z "$git_branch" ]; then
        local git_dirty="$([[ -z $(git status --porcelain 2> /dev/null) ]] || echo " ✗")"
        if [ $colors = yes ]; then
            git_dirty="%F{red}${git_dirty}%f"
            git_addon=" %F{cyan}git:(${git_branch}%f${git_dirty}%F{cyan})%f"
        else
            git_addon=" git:(${git_branch}${git_dirty})"
        fi
    fi

    # Main prompt
    local NL=$'\n'
    if [ "$colors" = yes ]; then
        # Different color for windows system (makes it easier to distinguish from WSL)
        if [ "$(__os_name)" = "Msys" ]; then
            export PS1="${NL}${debian_chroot:+($debian_chroot)}${arrow} %F{yellow}%n@%m%f:%F{blue}%1~%f${git_addon}${NL}%% "
        else
            export PS1="${NL}${debian_chroot:+($debian_chroot)}${arrow} %F{green}%n@%m%f:%F{blue}%1~%f${git_addon}${NL}%% "
        fi
    else
        export PS1="${NL}${debian_chroot:+($debian_chroot)}${arrow} %n@%m:%1~${git_addon}${NL}%% "
    fi
}
precmd_functions+=(__prompt_cmd)
################################################################################


################################################################################
# Default Aliases / Functions
################################################################################
# Color settings for ls
if [ "$(__use_colors)" = yes ]; then
    alias ls='ls --color=always'
    alias la='ls -A --color=always'
    alias ll='ls -alF --color=always'
else
    alias ls='ls --color=never'
    alias la='ls -A --color=never'
    alias ll='ls -alF --color=never'
fi

# open function like macos
case "$(__os_name)" in
    "Msys") 
        open() {
            target=$(echo -n "$1" | sed 's#/#\\#g')
            start "" "$target"
        }
    ;;
    "Darwin")
        # Not needed b/c already exists on macos
    ;;
    *)
        open(){
            nohup xdg-open "$*" > /dev/null 2>&1
        }
    ;;
esac
################################################################################
